@page "/addDebt"
@using Wealth_Watcher.Model
@inject Wealth_Watcher.Services.IDebtService debtService
@inject Wealth_Watcher.Services.UserSessionService UserSession

<h3>AddDebt</h3>
<h3>@errorMessage</h3>
<div class="flex justify-center items-center" style="padding-top: 100px;">
    <MudPaper Elevation="2" Square Class="pa-4" Style="background-color: white; max-height: 800px; overflow: auto;">
        <MudGrid>
            <MudItem xs="12" sm="6" Class="mb-4">
                <MudTextField @bind-Value="newDebt.source" T="string" Label="Source" Placeholder="Enter Title" FullWidth />
            </MudItem>
            <MudItem xs="12" sm="6" Class="mb-4">
                <MudTextField @bind-Value="newDebt.price" T="int" Label="Price" Placeholder="Enter Price" FullWidth />
            </MudItem>
            <MudItem xs="12" sm="6" Class="mb-4">
                <MudDatePicker @bind-Value="newDebt.dueDate" T="DateTime?" Label="Due Date" PickerLabel="Select Date" FullWidth />
            </MudItem>
            <MudItem xs="12" sm="6" Class="mb-4">
                <MudSelect T="string" @bind-Value="debtStatus" Label="Status" Placeholder="Enter Tags" FullWidth>
                    <MudSelectItem Value=@("NotCleared") />
                    <MudSelectItem Value=@("Cleared") />
                </MudSelect>
            </MudItem>
            <MudItem xs="12" style="display: flex; justify-content: flex-end; padding-top: 20px;">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleAddDebt">Add Debt</MudButton>
            </MudItem>
        </MudGrid>
    </MudPaper>
</div>

@code {

    private Debt newDebt = new Debt(); 
    private string errorMessage;
    private string debtStatus;
    protected override void OnInitialized()
    {
        newDebt.userId = UserSession.GetCurrentUserId(); 
    }

    private void HandleAddDebt()
    {
        try
        {
            if(debtStatus == "NotCleared")
            {
                newDebt.cleared = false;
            }
            else
            {
                newDebt.cleared = true;
            }
            debtService.addDebt(newDebt);
            newDebt = new Debt();
        }catch(Exception e)
        {
            errorMessage = "Failed adding Debt";
        }

    }
}
